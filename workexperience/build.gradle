plugins {
    id 'java-library'
    id 'application'
}

sourceCompatibility = 11
targetCompatibility = 11

group = 'com.experience'
version = '1.0'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.7.0')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.7.0')
    testCompile("org.junit.jupiter:junit-jupiter-params:5.7.0")
    
    // https://mvnrepository.com/artifact/org.projectlombok/lombok
compile group: 'org.projectlombok', name: 'lombok', version: '1.18.16'


compileOnly 'org.projectlombok:lombok:1.18.16'
	annotationProcessor 'org.projectlombok:lombok:1.18.16'
	
	testCompileOnly 'org.projectlombok:lombok:1.18.16'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'
	

    // https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    //implementation project(':agecalculator')
    compile project(':agecalculator')
}

test {
    useJUnitPlatform()
}

mainClassName='com.experience.workexperience.ExperienceSummary'

task fatJar(type: Jar) {
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

task runjar(type: JavaExec) {
    dependsOn fatJar
    classpath = fatJar.outputs.files
    main = mainClassName
}

jar {
  manifest {
    attributes(
      'Main-Class': mainClassName
    )
  }
}